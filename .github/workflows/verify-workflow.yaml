name: Verify

# Controls when the action will run.
on:
  workflow_call:
    outputs:
      status:
        description: The status of the job
        value: ${{ jobs.verify.outputs.status }}
    secrets:
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_TENANT_ID: 
        required: true
      OCP_PULL_SECRET:
        required: true
      ACME_EMAIL_SECRET:
        required: true
      PX_SPEC:
        required: true
      GITOPS_USERNAME:
        required: true
      GITOPS_TOKEN:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  verify:
    runs-on: ubuntu-latest
    container:
      image: quay.io/cloudnativetoolkit/cli-tools-azure:v1.2-v0.4.20
      options: --privileged --user root

    strategy:
      max-parallel: 2
      matrix:
        flavor:
          #- quickstart
          - standard
        dist:
          #- aro
          - ipi
        storage:
          #- default
          - portworx
        certificate:
          - acme
        region:
          - eastus
      fail-fast: false

    env:
      HOME: /home/devops
      TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_pull_secret: ${{ secrets.OCP_PULL_SECRET}}
      TF_VAR_acme_registration_email: ${{ secrets.ACME_EMAIL_SECRET }}
      TF_VAR_testing: staging
      TF_VAR_portworx_spec: ${{ secrets.PX_SPEC }}

    outputs:
      status: ${{ job.status }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Terraform Apply (ARO) - ${{ matrix.flavor }},${{ matrix.storage }}
        if: matrix.dist == 'aro'
        run: |
          RANDOM_PREFIX=$(cat /dev/urandom | tr -dc '[:alpha:]' | tr '[:upper:]' '[:lower:]' | fold -w ${1:-5} | head -n 1)
          FLAVOR_CHAR=$(echo "${{ matrix.flavor }}" | fold -w ${1:-1} | head -n 1)
          STORAGE_CHAR=$(echo "${{ matrix.storage }}" | fold -w ${1:-1} | head -n 1)
          echo "Building an ARO cluster in ${{ matrix.flavor }} architecture."
          ./setup-workspace.sh -f ${{ matrix.flavor }} -d ${{ matrix.dist }} -s ${{ matrix.storage }} -n "${FLAVOR_CHAR}${STORAGE_CHAR}-${RANDOM_PREFIX}" -r ${{ matrix.region }}
          cd ../workspaces/current
          
          echo ""
          echo "*** Start terraform.tfvars ***"
          cat cluster.tfvars
          cat gitops.tfvars
          echo "*** End terraform.tfvars ***"
          echo ""
          
          #./apply-all.sh -a

      - name: Terraform Apply (IPI) - ${{ matrix.flavor }},${{ matrix.storage }}
        if: matrix.dist == 'ipi'
        env:
          TF_VAR_gitops_repo_username: ${{ secrets.GITOPS_USERNAME }}
          TF_VAR_gitops_repo_token: ${{ secrets.GITOPS_TOKEN }}
        run: |
          RANDOM_PREFIX=$(cat /dev/urandom | tr -dc '[:alpha:]' | tr '[:upper:]' '[:lower:]' | fold -w ${1:-5} | head -n 1)
          FLAVOR_CHAR=$(echo "${{ matrix.flavor }}" | fold -w ${1:-1} | head -n 1)
          STORAGE_CHAR=$(echo "${{ matrix.storage }}" | fold -w ${1:-1} | head -n 1)
          if [[ ${{ matrix.flavor }} == "quickstart" ]]; then
            echo "Building an IPI cluster in ${{ matrix.flavor }} architecture."
            ./setup-workspace.sh -f ${{ matrix.flavor }} -d ${{ matrix.dist }} -c ${{ matrix.certificate }} -s ${{ matrix.storage }} -n "${FLAVOR_CHAR}${STORAGE_CHAR}-${RANDOM_PREFIX}" -r ${{ matrix.region }} -g "github.com"
            cd ../workspaces/current
            
            echo ""
            echo "*** Start terraform.tfvars ***"
            cat cluster.tfvars
            cat gitops.tfvars
            echo "*** End terraform.tfvars ***"
            echo ""

            #./apply-all.sh -a
          else
            echo "Standard with IPI not currently supported"
          fi

      - name: Terraform Destroy - ${{ matrix.flavor }},${{ matrix.storage }}
        if: ${{ always() }}
        run: |
          if [[ -x "../workspaces/current/destroy-all.sh" ]]; then
            cd ../workspaces/current
            ./destroy-all.sh -a
          else
           echo "Nothing to destroy"
          fi


